spring:
    application:
        name: fsy-registry
    jackson:
        serialization.write_dates_as_timestamps: false      #序列化时间格式
    mvc:
        favicon:
            enabled: false
    thymeleaf:
        mode: XHTML
    devtools:
        restart:
            enabled: false
        livereload:
            enabled: false
    mail:
        host: localhost
        port: 25
        username:
        password:

ribbon:
    eureka:
        enabled: true

zuul:
    prefix: /services/ #slash before and after
    strip-prefix: true

management:
    security:
        roles: ADMIN
    context-path: /management
    health:
        mail:
            enabled: false # When using the MailService, configure an SMTP server and set this to true

security:
    user:
        name: admin
        password: admin
        role: USER,ADMIN

logging:
    path: /tmp
    file: ${spring.application.name}.log


jhipster:
    http:
        version: V_1_1 # To use HTTP/2 you will need SSL support (see above the "server.ssl" configuration)
        cache: # Used by the CachingHttpHeadersFilter
            timeToLiveInDays: 1461
    security:
        authentication:
            jwt:
                secret: my-secret-token-to-change-in-production
                # Token is valid 24 hours
                token-validity-in-seconds: 86400
                token-validity-in-seconds-for-remember-me: 2592000
    mail: # specific JHipster mail property, for standard properties see MailProperties
        from: JHipsterRegistry@localhost
        base-url: http://my-server-url-to-change # Modify according to your server's URL
    metrics: # DropWizard Metrics configuration, used by MetricsConfiguration
        jmx.enabled: true
        graphite:
            enabled: false
            host: localhost
            port: 2003
            prefix: JHipsterRegistry
        prometheus:
            enabled: false
            endpoint: /prometheusMetrics
        logs: # Reports Dropwizard metrics in the logs
            enabled: false
            report-frequency: 60 # in seconds
    logging:
        logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
            enabled: false
            host: localhost
            port: 5000
            queue-size: 512
        spectator-metrics: # Reports Spectator Circuit Breaker metrics in the logs
            enabled: false
            # edit spring.metrics.export.delay-millis to set report frequency
    swagger:
        default-include-pattern: /(api|config)/.*
        title: JHipster Registry API
        description: JHipster Registry API documentation
        version: ${info.project.version}

---
spring:
  profiles: peer1
server:
    port: 8761
    compression:
        enabled: true
        mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
        min-response-size: 1024
eureka:
    instance:
        instanceId: jhipsterRegistry:${spring.application.instance_id:${random.value}}
        hostname: eureka-peer-1
    server:
        # see discussion about enable-self-preservation:
        # https://github.com/jhipster/generator-jhipster/issues/3654
        enable-self-preservation: false
        registry-sync-retry-wait-ms: 500
        a-sgcache-expiry-timeout-ms: 60000
        eviction-interval-timer-in-ms: 30000
        peer-eureka-nodes-update-interval-ms: 30000
        renewal-threshold-update-interval-ms: 15000
    client:
        fetch-registry: true
        register-with-eureka: true
        service-url:
            defaultZone: http://admin:${security.user.password:admin}@eureka-peer-2:8762/eureka/,http://admin:${security.user.password:admin}@eureka-peer-3:8763/eureka/

---
spring:
  profiles: peer2
server:
  port: 8762
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
    min-response-size: 1024
eureka:
    instance:
        instanceId: jhipsterRegistry:${spring.application.instance_id:${random.value}}
        hostname: eureka-peer-2
    server:
        # see discussion about enable-self-preservation:
        # https://github.com/jhipster/generator-jhipster/issues/3654
        enable-self-preservation: false
        registry-sync-retry-wait-ms: 500
        a-sgcache-expiry-timeout-ms: 60000
        eviction-interval-timer-in-ms: 30000
        peer-eureka-nodes-update-interval-ms: 30000
        renewal-threshold-update-interval-ms: 15000
    client:
        fetch-registry: true
        register-with-eureka: true
        service-url:
            defaultZone: http://admin:${security.user.password:admin}@eureka-peer-1:8761/eureka/,http://admin:${security.user.password:admin}@eureka-peer-3:8763/eureka/
---
spring:
  profiles: peer3
server:
  port: 8763
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
    min-response-size: 1024
eureka:
    instance:
        hostname: eureka-peer-3
        instanceId: jhipsterRegistry:${spring.application.instance_id:${random.value}}
    server:
        # see discussion about enable-self-preservation:
        # https://github.com/jhipster/generator-jhipster/issues/3654
        enable-self-preservation: false
        registry-sync-retry-wait-ms: 500
        a-sgcache-expiry-timeout-ms: 60000
        eviction-interval-timer-in-ms: 30000
        peer-eureka-nodes-update-interval-ms: 30000
        renewal-threshold-update-interval-ms: 15000
    client:
        fetch-registry: true
        register-with-eureka: true
        service-url:
            defaultZone: http://admin:${security.user.password:admin}@eureka-peer-1:8761/eureka/,http://admin:${security.user.password:admin}@eureka-peer-2:8762/eureka/
